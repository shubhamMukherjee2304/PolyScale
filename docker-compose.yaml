

services:
  account:
    build:
      context: .
      dockerfile: ./account/app.dockerfile
    depends_on:
      - account_db
    environment:
      DATABASE_URL: postgresql://neondb_owner:npg_4jvqg6poGRCf@ep-muddy-cloud-a5urt76c-pooler.us-east-2.aws.neon.tech/neondb?sslmode=disable
    restart: on-failure

  catalog:
    build:
      context: .
      dockerfile: ./catalog/app.dockerfile
    depends_on:
      - catalog_db
    environment:
      DATABASE_URL: http://catalog_db:9200
    restart: on-failure

  order:
    build:
      context: .
      dockerfile: ./order/app.dockerfile
    depends_on:
      - order_db
    environment:
      DATABASE_URL: postgresql://neondb_owner:npg_q9rDtAaVS3eC@ep-weathered-block-a5zgp4bn-pooler.us-east-2.aws.neon.tech/neondb?sslmode=disable
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
    restart: on-failure

  graphql:
    build:
      context: .
      dockerfile: ./graphql/app.dockerfile
    ports:
      - 8000:8080
    depends_on:
      - account
      - catalog
    environment:
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
      ORDER_SERVICE_URL: order:8080
    restart: on-failure

  account_db:
    build:
      context: ./account
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: neondb
      POSTGRES_USER: neondb_owner
      POSTGRES_PASSWORD: npg_4jvqg6poGRCf
    restart: unless-stopped

  catalog_db:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      discovery.type: single-node

  order_db:
    build:
      context: ./order
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: neondb
      POSTGRES_USER: neondb_owner
      POSTGRES_PASSWORD: npg_q9rDtAaVS3eC
    restart: unless-stopped